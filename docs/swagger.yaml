definitions:
  controller.ReqBody_Airdrop:
    properties:
      amount:
        type: integer
      msg_role:
        type: integer
      pos:
        type: string
      rot:
        type: string
      sale_id:
        description: 얘로 Tree면 2번을, 카드면 3번을 넣어주세요.
        type: string
    type: object
  controller.ReqBody_ObjDel:
    properties:
      objId:
        type: integer
      objMsgId:
        type: integer
    type: object
  controller.ReqBody_ObjMessage:
    properties:
      objId:
        type: integer
      objMessage:
        type: string
      userNickname:
        type: string
    type: object
  controller.ReqBody_Token:
    properties:
      nickName:
        type: string
    type: object
  controller.Resp_Airdrop_Item:
    properties:
      payload:
        $ref: '#/definitions/model.Obj'
    type: object
  controller.Resp_FindUserAndCreateBlock:
    properties:
      block:
        $ref: '#/definitions/model.Block'
      objs:
        items:
          $ref: '#/definitions/model.Obj'
        type: array
    type: object
  controller.Resp_FindUserBlockData:
    properties:
      block:
        $ref: '#/definitions/model.Block'
      objs:
        items:
          $ref: '#/definitions/model.Obj_with_productid'
        type: array
    type: object
  controller.Resp_GetMessageCount:
    properties:
      payload:
        example: 24
        type: integer
    type: object
  controller.Resp_GetObjsByUserId:
    properties:
      payload:
        items:
          $ref: '#/definitions/model.Obj'
        type: array
    type: object
  controller.Response_ReadObjMessages:
    properties:
      payload:
        items:
          $ref: '#/definitions/model.Obj_msg'
        type: array
    type: object
  model.Block:
    properties:
      created_time:
        type: string
      id:
        type: integer
      name:
        type: string
      thema:
        type: string
      updated_time:
        type: string
      user_id:
        type: integer
    type: object
  model.Collection:
    properties:
      created_time:
        type: string
      discord_url:
        type: string
      id:
        description: PK
        type: integer
      name_en:
        type: string
      name_ko:
        type: string
      opensea_url:
        type: string
      publisher_en:
        type: string
      publisher_ko:
        type: string
      twitter_url:
        type: string
      ww_url:
        type: string
    required:
    - name_en
    - name_ko
    - publisher_en
    - publisher_ko
    type: object
  model.Nft:
    properties:
      created_time:
        type: string
      description:
        type: string
      id:
        type: integer
      name_en:
        type: string
      name_ko:
        type: string
      product_id:
        type: integer
      properties:
        type: string
      token_id:
        type: integer
      updated_time:
        type: string
      wallet_id:
        type: integer
    required:
    - description
    - name_en
    - name_ko
    - product_id
    - token_id
    type: object
  model.Obj:
    properties:
      amount:
        type: integer
      block_id:
        type: integer
      building_id:
        type: integer
      created_at:
        type: string
      id:
        description: PK
        type: integer
      msg_role:
        type: integer
      nft_id:
        type: integer
      pos:
        type: string
      rot:
        type: string
      updated_at:
        type: string
      updated_user:
        type: integer
      user_id:
        type: integer
    required:
    - block_id
    - pos
    - rot
    - user_id
    type: object
  model.Obj_msg:
    properties:
      created_at:
        type: string
      created_user:
        type: integer
      id:
        description: PK
        type: integer
      is_active:
        type: boolean
      message:
        type: string
      obj_id:
        type: integer
      updated_at:
        type: string
      updated_user:
        type: integer
      user_nickname:
        type: string
    required:
    - created_user
    - message
    - obj_id
    - updated_user
    - user_nickname
    type: object
  model.Obj_with_productid:
    properties:
      amount:
        type: integer
      block_id:
        type: integer
      building_id:
        type: integer
      created_at:
        type: string
      id:
        description: PK
        type: integer
      msg_role:
        type: integer
      nft_id:
        type: integer
      pos:
        type: string
      product_id:
        type: integer
      rot:
        type: string
      updated_at:
        type: string
      updated_user:
        type: integer
      user_id:
        type: integer
    required:
    - block_id
    - pos
    - rot
    - user_id
    type: object
  model.ProductGroup:
    properties:
      amount:
        type: integer
      collection_id:
        type: integer
      contract:
        type: string
      created_time:
        type: string
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      message_amount:
        type: integer
      message_role:
        description: MSG Role을 여기서 주어야 하는가..에 대한 의문.
        type: string
      metadata:
        type: string
      name_en:
        type: string
      name_ko:
        type: string
      properties:
        type: string
      snap:
        type: string
      thumbnail_url:
        type: string
      updated_time:
        type: string
    required:
    - collection_id
    - contract
    type: object
info:
  contact: {}
paths:
  /api/block/data/{userid}:
    get:
      description: 유저의 블록 보유 확인 후 (없으면 생성 후)리턴
      parameters:
      - description: Write Block ID
        in: path
        name: userid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Resp_FindUserAndCreateBlock'
      summary: 유저의 블록 보유 확인 및 생성
      tags:
      - Ready
  /api/block/get/{userid}:
    get:
      description: UserId 를 통해 Block정보를 가져옴.
      parameters:
      - description: Write Block ID
        in: path
        name: userid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Block'
      summary: UserId -> GetBlock
      tags:
      - Ready
  /api/item/collection/{collectionid}:
    get:
      description: Collection ID를 넣으면 Collection을 리턴함
      parameters:
      - description: Write Block ID
        in: path
        name: collectionid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Collection'
      summary: Collection By ID
      tags:
      - Ready
  /api/item/group/{groupid}:
    get:
      description: Product Group ID를 넣으면 -> Group을 반환함.
      parameters:
      - description: Write Block ID
        in: path
        name: groupid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ProductGroup'
      summary: GetProductGroup By ID
      tags:
      - Ready
  /api/item/nft/{nftid}:
    get:
      description: Nft ID를 넣으면 -> NFT를 반환함.
      parameters:
      - description: Write Nft ID
        in: path
        name: nftid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Nft'
      summary: GetNftById By ID
      tags:
      - Ready
  /api/obj/airdrop:
    post:
      description: '#에어드랍진행 (SaleID를 기준으로 트리이거나 또는 카드가 될 수 있음, 1인당 1개씩 수령가능)'
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Plz Write
        in: body
        name: ReqBody_Airdrop
        required: true
        schema:
          $ref: '#/definitions/controller.ReqBody_Airdrop'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Resp_Airdrop_Item'
      security:
      - Authorization: []
      summary: '#에어드랍진행'
      tags:
      - Main
  /api/obj/block/{blockid}:
    get:
      description: '#Obj 조회 By BlockID'
      parameters:
      - description: Write Block ID
        in: path
        name: blockid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Obj'
            type: array
      summary: '#Obj 조회 By BlockID'
      tags:
      - Main
  /api/obj/msg:
    post:
      description: 유저의 블록 보유 확인 후 (없으면 생성 후)리턴
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Write User obj id and message
        in: body
        name: ReqBody_ObjMessage
        required: true
        schema:
          $ref: '#/definitions/controller.ReqBody_ObjMessage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Obj_msg'
      security:
      - Authorization: []
      summary: obj message 작성
      tags:
      - Main
  /api/obj/msg/{id}:
    get:
      description: Obj Msg 단일 조회 기능 (단일, ID값 기준)
      parameters:
      - description: 오브제 메세지 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Obj_msg'
      summary: Obj Msg 단일 조회
      tags:
      - Ready
  /api/obj/msg/count/{obj_id}:
    get:
      description: Obj Message 갯수 조회 기능 (트리 크기 조정용)
      parameters:
      - description: Object id
        in: path
        name: obj_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Resp_GetMessageCount'
        "400":
          description: Bad Request
      summary: Obj Message 갯수 조회 기능 (트리 크기 조정용)
      tags:
      - Ready
  /api/obj/msg/del:
    post:
      description: Obj msg의 is_active 값을 변경해 삭제처리 한다
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Write User obj id and obj_msg id
        in: body
        name: ReqBody_ObjDel
        required: true
        schema:
          $ref: '#/definitions/controller.ReqBody_ObjDel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Obj_msg'
      security:
      - Authorization: []
      summary: Obj msg 삭제
      tags:
      - Main
  /api/obj/msg/paging/{page}/{limit}:
    get:
      description: Obj messages 페이징 조회
      parameters:
      - description: 페이지입력
        in: path
        name: page
        required: true
        type: string
      - description: 조회갯수제한
        in: path
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response_ReadObjMessages'
      summary: Obj messages 페이징 조회
      tags:
      - Main
  /api/obj/userid:
    get:
      description: '#JWT Token을 헤더에 포함하면 Obj를 조회함'
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Resp_GetObjsByUserId'
      security:
      - Authorization: []
      summary: '#JWT Token을 헤더에 포함하면 Obj를 조회함'
      tags:
      - Main
  /api/user/:
    post:
      description: 유저의 블록 보유 확인 후 (없으면 생성 후)리턴
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Write User Token
        in: body
        name: ReqBody_Token
        required: true
        schema:
          $ref: '#/definitions/controller.ReqBody_Token'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Resp_FindUserBlockData'
      security:
      - Authorization: []
      summary: '#유저 접속시 호출 초기화 및 유저 조회'
      tags:
      - Main
swagger: "2.0"
