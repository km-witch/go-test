definitions:
  controller.Resp:
    properties:
      nft:
        $ref: '#/definitions/model.Nft'
      tx:
        $ref: '#/definitions/model.NftTx'
    type: object
  model.Block:
    properties:
      created_time:
        type: string
      id:
        type: integer
      name:
        type: string
      thema:
        type: string
      updated_time:
        type: string
      user_id:
        type: integer
    type: object
  model.Collection:
    properties:
      created_time:
        type: string
      discord_url:
        type: string
      id:
        description: PK
        type: integer
      name_en:
        type: string
      name_ko:
        type: string
      opensea_url:
        type: string
      publisher_en:
        type: string
      publisher_ko:
        type: string
      twitter_url:
        type: string
      ww_url:
        type: string
    required:
    - name_en
    - name_ko
    - publisher_en
    - publisher_ko
    type: object
  model.Nft:
    properties:
      created_time:
        type: string
      description:
        type: string
      id:
        type: integer
      name_en:
        type: string
      name_ko:
        type: string
      product_id:
        type: integer
      properties:
        type: string
      token_id:
        type: integer
      updated_time:
        type: string
    required:
    - description
    - name_en
    - name_ko
    - product_id
    - token_id
    type: object
  model.NftTx:
    properties:
      created_time:
        type: string
      from:
        type: integer
      id:
        type: integer
      method:
        type: integer
      nft_id:
        type: integer
      to:
        type: integer
    required:
    - from
    - method
    - nft_id
    - to
    type: object
  model.Obj:
    properties:
      block_id:
        type: integer
      building_id:
        type: integer
      created_at:
        type: string
      id:
        description: PK
        type: integer
      nft_id:
        type: integer
      pos:
        type: string
      rot:
        type: string
      updated_at:
        type: string
      updated_user:
        type: integer
      user_id:
        type: integer
    required:
    - block_id
    - pos
    - rot
    - user_id
    type: object
  model.Obj_msg:
    properties:
      created_at:
        type: string
      created_user:
        type: integer
      id:
        description: PK
        type: integer
      is_active:
        type: boolean
      message:
        type: string
      obj_id:
        type: integer
      type:
        type: string
      updated_at:
        type: string
      updated_user:
        type: integer
    required:
    - created_user
    - message
    - obj_id
    - type
    - updated_user
    type: object
  model.ProductGroup:
    properties:
      amount:
        type: integer
      collection_id:
        type: integer
      contract:
        type: string
      created_time:
        type: string
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      message_amount:
        type: integer
      message_role:
        description: MSG Role을 여기서 주어야 하는가..에 대한 의문.
        type: string
      metadata:
        type: string
      name_en:
        type: string
      name_ko:
        type: string
      properties:
        type: string
      snap:
        type: string
      thumbnail_url:
        type: string
      updated_time:
        type: string
    required:
    - collection_id
    - contract
    type: object
info:
  contact: {}
paths:
  /api/block/{userid}:
    get:
      description: 유저의 블록 보유 확인 후 (없으면 생성 후)리턴
      parameters:
      - description: Write Block ID
        in: path
        name: userid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Block'
      summary: 유저의 블록 보유 확인 및 생성
      tags:
      - Block
  /api/item/collection/{collectionid}:
    get:
      description: Collection ID를 넣으면 Collection을 리턴함
      parameters:
      - description: Write Block ID
        in: path
        name: collectionid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Collection'
      summary: Collection By ID
      tags:
      - Item
  /api/item/group/{groupid}:
    get:
      description: Product Group ID를 넣으면 -> Group을 반환함.
      parameters:
      - description: Write Block ID
        in: path
        name: groupid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ProductGroup'
      summary: GetProductGroup By ID
      tags:
      - Item
  /api/item/nft/:
    post:
      consumes:
      - application/json
      description: Nft ID를 넣으면 -> NFT를 반환함.
      parameters:
      - in: formData
        name: group_id
        type: string
      - description: group ID
        in: formData
        name: groupid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Resp'
      summary: GetNftById By ID
      tags:
      - Item
  /api/item/nft/{nftid}:
    get:
      description: Nft ID를 넣으면 -> NFT를 반환함.
      parameters:
      - description: Write Block ID
        in: path
        name: nftid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Nft'
      summary: GetNftById By ID
      tags:
      - Item
  /api/obj/{blockid}:
    get:
      description: 블록아이디를 넣으면 오브제를 리턴함.
      parameters:
      - description: Write Block ID
        in: path
        name: blockid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Obj'
      summary: 블록아이디로 오브제를 가져오는 API
      tags:
      - Obj
  /api/obj/airdrop:
    post:
      description: Wallet생성도 해주고, NFT 생성 해주고, Obj 생성!
      parameters:
      - description: Write Block ID
        in: formData
        name: ReqBody
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Obj'
      summary: 에어드랍진행 !
      tags:
      - Obj
  /api/obj/msg/{id}:
    get:
      description: Obj Msg 단일 조회 기능 (단일, ID값 기준)
      parameters:
      - description: Write ObjMSG ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Obj_msg'
      summary: Obj Msg 단일 조회
      tags:
      - Obj
  /api/obj/msg/paging/{page}/{limit}:
    get:
      description: Wallet생성도 해주고, NFT 생성 해주고, Obj 생성!
      parameters:
      - description: 페이지입력
        in: path
        name: page
        required: true
        type: string
      - description: 조회갯수제한
        in: path
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Obj_msg'
      summary: 에어드랍진행 !
      tags:
      - Obj
swagger: "2.0"
